{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA+BeA,MA3Bf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACA,sBAAKC,UAAU,QAAf,UAEQ,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACzC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,SAAd,SAAwBD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,qBAAgBL,UAAU,eAA1B,UAA0CK,EAA1C,IAAkDD,IAAzCC,QAC9D,mBAAGL,UAAU,gBAAb,SAA8BH,WCFpCS,G,kNACJC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,4DADvC,gBACWJ,EADX,EACHK,KAAOA,KAAOL,OACrB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAFxB,2C,uDAMZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAClB,OACC,yBAAST,UAAU,YAAnB,SACIQ,EACA,qBAAKR,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAAAc,GAAK,OACf,cAAC,EAAD,CAEIC,GAAID,EAAMC,GACVvB,KAAMsB,EAAMtB,KACZC,MAAOqB,EAAMrB,MACbC,QAASoB,EAAMpB,QACfC,OAAQmB,EAAME,mBACdpB,OAAQkB,EAAMlB,QANTkB,EAAMC,e,GA5BbE,IAAMC,YA4CTf,ICnDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a874ccf5.chunk.js","sourcesContent":["//4.3 Adding Genres\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    return (\r\n    <div className=\"movie\">\r\n    \r\n            <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie_data\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <h5 className=\"movie_year\">{year}</h5>\r\n            <ul className=\"genres\">{genres.map((genre, index) => <li key={index} className=\"genres_genre\">{index} {genre}</li>)}</ul>\r\n            <p className=\"movie_summary\">{summary}</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n//map function은 item과 item number(index, number 맘대로 불러) 이 두가지 정보를 줌\r\n\r\n//<h3 className=\"movie_title\" style={{backgroundColor: \"red\"}}>{title}</h3> 가능\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;\r\n\r\n","//4.2 Styling the Movies\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n//javascript class 안에 있으면 component class에 의해 혼란스러워져\n//Invalid DOM property `class`. Did you mean `className`? 이런에러뜸\n//div등의 className쓸때 class만 쓰지말기.\n//label 태그에는 for가 있는데 javascript에서의 for는 loop 그래서 <label htmlFor=\"\">이렇게씀\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: [] \n  };\n\n  getMovies = async() => {\n    const {data: {data :{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoading: false});\n  \n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    const { isLoading, movies } = this.state;\n     return (\n      <section className=\"container\">\n        { isLoading ? (\n          <div className=\"loader\">\n              <span className=\"loader_text\">Loading...</span>\n            </div>\n          ) : (\n            <div className=\"movies\">\n              {movies.map(movie => (\n                <Movie \n                    key={movie.id} \n                    id={movie.id} \n                    year={movie.year} \n                    title={movie.title} \n                    summary={movie.summary} \n                    poster={movie.medium_cover_image}\n                    genres={movie.genres}\n                />\n              ))}\n            </div>\n            ) }\n      </section>\n     );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// react는 component를 사용해서 html처럼 작성하려는 경우에 필요\n//component : HTML을 반환하는 함수\n\n//javascript와 html 사이의 이러한 조합을 -> jsx\n\n//****\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n// import Potato from './Potato';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App /><Potato />\n//   </React.StrictMode>,\n//   document.getElementById('potato')\n// );\n\n// //이렇게 하면 안돼 \n// //react application이 하나의 component만을 rendering해야하기 때문이야 \n// // 지금 그 컴포넌ㅌ트가 App. 그 안에 다른 컴포넌트를 넣어줘야 쓸수있음\n\n//App.js안에 <Potato />를 추가\n//import Potato from \"./Potato\";\n// function App() {\n//   return (\n//     <div className=\"App\">\n//      hi\n//      <Potato />\n//     </div>\n//   );\n// }"],"sourceRoot":""}