{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAwCeA,MApCf,YAA2D,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OACA,cAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACHP,OAAMC,QAAOC,UAASC,SAAQC,WAHtC,SAMA,sBAAKI,UAAU,QAAf,UAEQ,qBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACzC,sBAAKO,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BP,IAC7B,oBAAIO,UAAU,aAAd,SAA4BR,IAC5B,oBAAIQ,UAAU,eAAd,SAA8BJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OAAkB,oBAAgBL,UAAU,eAA1B,SAA0CI,GAAjCC,QACpE,oBAAGL,UAAU,gBAAb,UAA8BN,EAAQY,MAAM,EAAG,KAA/C,kBCdNC,G,kNACJR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,4DADvC,gBACWJ,EADX,EACHK,KAAOA,KAAOL,OACrB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAFxB,2C,uDAMZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKjB,MAA3BS,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAClB,OACC,yBAAST,UAAU,YAAnB,SACIQ,EACA,qBAAKR,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAAAc,GAAK,OACf,cAAC,EAAD,CAEI1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM1B,e,GA5BZ4B,IAAMC,YA4CVb,I,MC7BAc,MAhBf,SAAeC,GAKb,OAJEC,QAAQC,IAAIF,GAKZ,sBAAKtB,UAAU,mBAAf,UACE,gJAIA,kECPAyB,E,uKACF,WACIF,QAAQC,IAAIR,KAAKM,OACjB,MAA8BN,KAAKM,MAA3BI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAClBJ,QAAQC,IAAIE,EAAS3B,YACC6B,IAAnBF,EAAS3B,OAER4B,EAAQE,KAAK,O,oBAGrB,WACI,IAAQH,EAAaV,KAAKM,MAAlBI,SAER,OAAGA,EAAS3B,MACD,+BAAO2B,EAAS3B,MAAMN,QAEtB,S,GAhBE0B,IAAMC,WA+BZK,I,MCzBAK,MAVf,WACI,OACA,sBAAK9B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMH,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,MCWOkC,MAXf,WACK,OACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,cAAC,IAAD,CAAOyB,KAAK,SAASE,UAAWb,IAChC,cAAC,IAAD,CAAOW,KAAK,aAAaE,UAAWT,QCV3CU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c2c464ab.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    return (\r\n    <Link to={{\r\n        pathname: `/movie/${id}`,\r\n        state: {\r\n            year, title, summary, poster, genres\r\n        }\r\n    }}>\r\n    <div className=\"movie\">\r\n    \r\n            <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie_data\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <h5 className=\"movie_year\">{year}</h5>\r\n            <ul className=\"movie_genres\">{genres.map((genre, index) => <li key={index} className=\"movie_genres\">{genre}</li>)}</ul>\r\n            <p className=\"movie_summary\">{summary.slice(0, 140)}...</p>\r\n        </div>\r\n    </div>\r\n    </Link>\r\n    );\r\n}\r\n//이제 클릭하면 /movie-datail로 가게되고 포스터의 모든 props을 보내게 됨\r\n\r\n// state: {\r\n//     year: year,  title: title, summary: summary , poster: poster, genres: genres\r\n// } 이렇게 써도 됨\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;\r\n\r\n\r\n// Link컴포넌트는 리액트에서 ReactDOM에 의해 a태그로 변환되서 보여짐.\r\n// display: contents -> container를 사라지게하여 DOM에서 다음 단계의 하위 요소를 생성.\r\n// .movies a{\r\n// display: contents;\r\n// text-decoration: none;\r\n// }","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies: [] \r\n  };\r\n\r\n  getMovies = async() => {\r\n    const {data: {data :{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({movies, isLoading: false});\r\n  \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n\r\n  render(){\r\n    const { isLoading, movies } = this.state;\r\n     return (\r\n      <section className=\"container\">\r\n        { isLoading ? (\r\n          <div className=\"loader\">\r\n              <span className=\"loader_text\">Loading...</span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"movies\">\r\n              {movies.map(movie => (\r\n                <Movie \r\n                    key={movie.id} \r\n                    id={movie.id} \r\n                    year={movie.year} \r\n                    title={movie.title} \r\n                    summary={movie.summary} \r\n                    poster={movie.medium_cover_image}\r\n                    genres={movie.genres}\r\n                />\r\n              ))}\r\n            </div>\r\n            ) }\r\n      </section>\r\n     );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n","//Route Props\r\nimport React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n    //찍어보면 history, location, match, staticContext 4개의 props갖고있음\r\n    //얘네는 아직 about으로 전송되지 않았음. react-router에 의해 넣어진거\r\n  //return <span>About this page: I built it because I love movies.</span>;\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\n// function Detail({location}){\r\n//     console.log(location);\r\n//     return <span>hello</span>;\r\n// }\r\n//영화 카드 클릭없이 이 페이지 키면 state: undefinded\r\n//--> 이걸 고쳐볼게(카드 클릭해야만 갈수있도록)\r\nclass Detail extends React.Component{\r\n    componentDidMount(){\r\n        console.log(this.props); //여기서 history 찾아보면 많이 있음\r\n        const { location, history } = this.props;\r\n        console.log(location.state);\r\n        if(location.state === undefined){\r\n            //state가 없다면 유저를 홈으로 리다이렉트 시킬꺼야 \r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    render() {\r\n        const { location } = this.props;\r\n        //return <span>{location.state.title}</span>;\r\n        if(location.state){\r\n            return <span>{location.state.title}</span>;\r\n           } else {\r\n            return null;\r\n       }\r\n    }\r\n}\r\n\r\n//detail 주소창에서 enter를 치면 에러가 뜸\r\n// -> location이 존재하지 않아서\r\n// 처음에 render가 실행되고 componentDidMount가 실행됨 --> 리다이렉트가 실행되기 전에 render가 실행되서 에러뜨는거\r\n// Solution. \r\n        // if(location.state){\r\n        //      return <span>{location.state.title}</span>;\r\n        //     } else {\r\n        //      return null;\r\n        // }\r\n\r\nexport default Detail;\r\n\r\n// function Detail(props){\r\n//     console.log(props);\r\n//     return <span>hello</span>;\r\n// }","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(){\r\n    return (\r\n    <div className=\"nav\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/about\">About</Link>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Navigation;\r\n\r\n//react-router의 공식문서를 보면 to를 string이나 object로 변경할수있다\r\n//<Link to={{ pathname: \"/courses\",\r\n         //     search: \"?sort=name\",\r\n         //     hash: \"#the-hash\",\r\n       //     state: {fromDashboard: true}\r\n     // }} />\r\n\r\n\r\n// {/* <Link to={{\r\n//     pathname: \"/about\",\r\n//     state: {\r\n//         fromNavigation: true\r\n//     }\r\n// }}>About</Link> */}\r\n//we are sending an object to the about page\r\n//React router는 우리가 About 링크를 클릭하면 /about로 데려가고 바로 component about(App.js)이 되어야함\r\n//also, props도 보내주고 있음 to the route","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App(){\n     return (\n     <HashRouter>\n       <Navigation />\n       <Route path=\"/\" exact={true} component={Home} />\n       <Route path=\"/about\" component={About} />\n       <Route path=\"/movie/:id\" component={Detail} />\n     </HashRouter>\n     );\n   }\n\nexport default App;\n\n//Router에 있는 모든 route들은 props을 가지고 있음\n// 그래서 클릭 한번으로 정보를 전달 할 수 있음\n// about화면으로 가는 것 뿐만아니라 정보까지 전달.\n\n// Route props\n// - All the components have props\n// - The props in About.js were put by React router\n// - Every route on the router gets some props by default\n// - When you click on the link, React router takes you to the component but it's also sending some props to the route\n// - You can send urls like this:\n// pathname: \"/about?sdf\"","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// react는 component를 사용해서 html처럼 작성하려는 경우에 필요\n//component : HTML을 반환하는 함수\n\n//javascript와 html 사이의 이러한 조합을 -> jsx\n\n//****\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n// import Potato from './Potato';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App /><Potato />\n//   </React.StrictMode>,\n//   document.getElementById('potato')\n// );\n\n// //이렇게 하면 안돼 \n// //react application이 하나의 component만을 rendering해야하기 때문이야 \n// // 지금 그 컴포넌ㅌ트가 App. 그 안에 다른 컴포넌트를 넣어줘야 쓸수있음\n\n//App.js안에 <Potato />를 추가\n//import Potato from \"./Potato\";\n// function App() {\n//   return (\n//     <div className=\"App\">\n//      hi\n//      <Potato />\n//     </div>\n//   );\n// }"],"sourceRoot":""}